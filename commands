    docker build . //builds  a new image based on Dockerfile
    docker build -t <imagename>>:<tag> . //build a new image with the name     
    docker images | docker image ls// see all the images
    docker ps -a //see all conatiners
    docker start <container-id> or container-Name//start existing containeer
    docker stop <container-id> or container-Name//stop existing constainer
    docker run -p 80:3000 -d --name logsapp<image-id>:<tag-optional> 
        //localhostPort:docker port. 
        //Docker run creates a new container based on image. -d => detached
        //--name specifies container name to create
    docker run -d -p 80:3000 --name logsapp logsapp //using image by name
    docker rm <container-id> //remove container
    docker image rm <image-id>//remove image
    docker rmi <image-id>//short version how to remove image
    docker image prune//removes all unused images
    docker container prune //deletes all containers


    docker attach <container-id> //jump inside container (to jump out, stopped a container...)
    docker logs <container-id> // check container logs   

    docker run -d -p 80:3000 --name logsapp --rm <image-id>
        //useful command, --rm instructs to remove container after it is stoped

    docker tag logsapp apiscevs/logsapp  //assign or update a tag (actually creates a new image)    
    docker push apiscevs/logsapp:latest //pushes an image to dockerhub
    docker pull apiscevs/logsapp //pulls an image from docker hub

    docker image inspect logsapp // view all the layers of the image

    logs-app % docker run -d -p 82:83 -e PORT=83 --rm logsapp:env4200
    //overriding environment variable called PORT to be 83

    docker run -d -p 82:4300 --env-file ./config/.env --rm logsapp:env4200
    //feeding config file with variables

    make run //added a makefile, that keeps a run command, kinda shortcut

    docker run -d -p 82:4300 -v mylogs:/app/data --env-file ./config/.env --rm --name fancyname logsapp:env4200
    //-v mylogs:/app/data creates a named volume with Name mylogs
    //named volumes are not deleted if you delete a container
    //if no name is specified, volume will be creted as annonymous and will be deleted after container delete